@using System.Drawing
@page "/demo/icon"

<div class="px-3">
    <ComponentInfo Type="typeof(LxIcon)" />
    <Demo>
        <Content>
            <div class="flex-col">
                <div class="flex-row">
                    <LxIcon Source="rsrc://google.materialdesign/close" Size="(Size, SizeUnit)" Fill="Color" />
                </div>
                <p class="mb-1">
                    You can define multiple <a href="https://developer.mozilla.org/en-US/docs/Web/SVG">SVG</a> icon sources during startup, to then easily access and render icons with the <code>@("<LxIcon />")</code> component.<br/>
                    In the following are some examples, showing how to specify a icon and its source:
                </p>
                <pre class="mb-4">
                    <code>@@* Syntax for default icon source *@@
@("<LxIcon Source=\"rsrc:arrow_upward\" />")
@("<LxIcon Source=\"rsrc:///arrow_upward\" />")
@("<LxIcon Source=\"rsrc://app/arrow_upward\" />")

@@* Syntax for icon source "my.icon.source" *@@
@("<LxIcon Source=\"rsrc://my.icon.source/arrow_upward\" />")</code>
                </pre>
                <div class="mb-4">
                    <h6>heroicons</h6>
                    <pre>
                        <code>@("<LxIcon Source=\"rsrc://tailwind.hero/fire\" />") @@* Note that the icon source "tailwind.hero" is not included *@@</code>
                    </pre>
                    <div class="flex-row my-2">
                        <LxIcon Source="rsrc://tailwind.hero/fire" Fill="Color" />
                        <LxIcon Source="rsrc://tailwind.hero/academic-cap" Fill="Color" />
                        <LxIcon Source="rsrc://tailwind.hero/archive-box" Fill="Color" />
                        <LxIcon Source="rsrc://tailwind.hero/cloud" Fill="Color" />
                    </div>
                    <span>
                        Copyright (c) 2022 Refactoring UI Inc. 
                        (<a href="https://github.com/tailwindlabs/heroicons">GitHub</a>, <a href="https://github.com/tailwindlabs/heroicons/blob/master/LICENSE">License</a>)
                    </span>
                </div>
                <div>
                    <h6>Material Design Icons</h6>
                    <pre>
                        <code>@("<LxIcon Source=\"rsrc://google.materialdesign/refresh\" />") @@* Note that the icon source "google.materialdesign" is not included *@@</code>
                    </pre>
                    <div class="flex-row my-2">
                        <LxIcon Source="rsrc://google.materialdesign/refresh" Fill="Color" />
                        <LxIcon Source="rsrc://google.materialdesign/schedule" Fill="Color" />
                        <LxIcon Source="rsrc://google.materialdesign/today" Fill="Color" />
                        <LxIcon Source="rsrc://google.materialdesign/edit" Fill="Color" />
                    </div>
                    <span>
                        Copyright (c) 2022 Google 
                        (<a href="https://github.com/google/material-design-icons">GitHub</a>, <a href="https://github.com/google/material-design-icons/blob/master/LICENSE">License</a>)
                    </span>
                </div>
            </div>
        </Content>
        <Customization>
            <Entry Text="Color">
                <LxInput Placeholder="Enter hex code ..."
                         Converter="_colorConverter"
                         @bind-Value="Color" />
            </Entry>
            <Entry Text="Size">
                <LxInputNumber Placeholder="Enter icon size ..."
                               @bind-Value="Size" />
            </Entry>
            <Entry Text="Size unit">
                <LxSelect Items="Enum.GetValues(typeof(Unit)).Cast<Unit>()"
                          Converter="DefaultOptionConverter<Unit>.Instance"
                          @bind-Value="SizeUnit" />
            </Entry>
        </Customization>
    </Demo>
</div>

@code{

    private ColorStringConverter _colorConverter = new ColorStringConverter();

    private Color Color { get; set; } = Color.Black;

    private double Size { get; set; } = 2;

    private Unit SizeUnit { get; set; } = Unit.REM;

}